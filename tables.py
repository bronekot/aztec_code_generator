table = {
    (15, True): {
        "layers": 1,
        "codewords": 17,
        "cw_bits": 6,
        "bits": 102,
        "digits": 13,
        "text": 12,
        "bytes": 6,
    },
    (19, False): {
        "layers": 1,
        "codewords": 21,
        "cw_bits": 6,
        "bits": 126,
        "digits": 18,
        "text": 15,
        "bytes": 8,
    },
    (19, True): {
        "layers": 2,
        "codewords": 40,
        "cw_bits": 6,
        "bits": 240,
        "digits": 40,
        "text": 33,
        "bytes": 19,
    },
    (23, False): {
        "layers": 2,
        "codewords": 48,
        "cw_bits": 6,
        "bits": 288,
        "digits": 49,
        "text": 40,
        "bytes": 24,
    },
    (23, True): {
        "layers": 3,
        "codewords": 51,
        "cw_bits": 8,
        "bits": 408,
        "digits": 70,
        "text": 57,
        "bytes": 33,
    },
    (27, False): {
        "layers": 3,
        "codewords": 60,
        "cw_bits": 8,
        "bits": 480,
        "digits": 84,
        "text": 68,
        "bytes": 40,
    },
    (27, True): {
        "layers": 4,
        "codewords": 76,
        "cw_bits": 8,
        "bits": 608,
        "digits": 110,
        "text": 89,
        "bytes": 53,
    },
    (31, False): {
        "layers": 4,
        "codewords": 88,
        "cw_bits": 8,
        "bits": 704,
        "digits": 128,
        "text": 104,
        "bytes": 62,
    },
    (37, False): {
        "layers": 5,
        "codewords": 120,
        "cw_bits": 8,
        "bits": 960,
        "digits": 178,
        "text": 144,
        "bytes": 87,
    },
    (41, False): {
        "layers": 6,
        "codewords": 156,
        "cw_bits": 8,
        "bits": 1248,
        "digits": 232,
        "text": 187,
        "bytes": 114,
    },
    (45, False): {
        "layers": 7,
        "codewords": 196,
        "cw_bits": 8,
        "bits": 1568,
        "digits": 294,
        "text": 236,
        "bytes": 145,
    },
    (49, False): {
        "layers": 8,
        "codewords": 240,
        "cw_bits": 8,
        "bits": 1920,
        "digits": 362,
        "text": 291,
        "bytes": 179,
    },
    (53, False): {
        "layers": 9,
        "codewords": 230,
        "cw_bits": 10,
        "bits": 2300,
        "digits": 433,
        "text": 348,
        "bytes": 214,
    },
    (57, False): {
        "layers": 10,
        "codewords": 272,
        "cw_bits": 10,
        "bits": 2720,
        "digits": 516,
        "text": 414,
        "bytes": 256,
    },
    (61, False): {
        "layers": 11,
        "codewords": 316,
        "cw_bits": 10,
        "bits": 3160,
        "digits": 601,
        "text": 482,
        "bytes": 298,
    },
    (67, False): {
        "layers": 12,
        "codewords": 364,
        "cw_bits": 10,
        "bits": 3640,
        "digits": 691,
        "text": 554,
        "bytes": 343,
    },
    (71, False): {
        "layers": 13,
        "codewords": 416,
        "cw_bits": 10,
        "bits": 4160,
        "digits": 793,
        "text": 636,
        "bytes": 394,
    },
    (75, False): {
        "layers": 14,
        "codewords": 470,
        "cw_bits": 10,
        "bits": 4700,
        "digits": 896,
        "text": 718,
        "bytes": 446,
    },
    (79, False): {
        "layers": 15,
        "codewords": 528,
        "cw_bits": 10,
        "bits": 5280,
        "digits": 1008,
        "text": 808,
        "bytes": 502,
    },
    (83, False): {
        "layers": 16,
        "codewords": 588,
        "cw_bits": 10,
        "bits": 5880,
        "digits": 1123,
        "text": 900,
        "bytes": 559,
    },
    (87, False): {
        "layers": 17,
        "codewords": 652,
        "cw_bits": 10,
        "bits": 6520,
        "digits": 1246,
        "text": 998,
        "bytes": 621,
    },
    (91, False): {
        "layers": 18,
        "codewords": 720,
        "cw_bits": 10,
        "bits": 7200,
        "digits": 1378,
        "text": 1104,
        "bytes": 687,
    },
    (95, False): {
        "layers": 19,
        "codewords": 790,
        "cw_bits": 10,
        "bits": 7900,
        "digits": 1511,
        "text": 1210,
        "bytes": 753,
    },
    (101, False): {
        "layers": 20,
        "codewords": 864,
        "cw_bits": 10,
        "bits": 8640,
        "digits": 1653,
        "text": 1324,
        "bytes": 824,
    },
    (105, False): {
        "layers": 21,
        "codewords": 940,
        "cw_bits": 10,
        "bits": 9400,
        "digits": 1801,
        "text": 1442,
        "bytes": 898,
    },
    (109, False): {
        "layers": 22,
        "codewords": 1020,
        "cw_bits": 10,
        "bits": 10200,
        "digits": 1956,
        "text": 1566,
        "bytes": 976,
    },
    (113, False): {
        "layers": 23,
        "codewords": 920,
        "cw_bits": 12,
        "bits": 11040,
        "digits": 2116,
        "text": 1694,
        "bytes": 1056,
    },
    (117, False): {
        "layers": 24,
        "codewords": 992,
        "cw_bits": 12,
        "bits": 11904,
        "digits": 2281,
        "text": 1826,
        "bytes": 1138,
    },
    (121, False): {
        "layers": 25,
        "codewords": 1066,
        "cw_bits": 12,
        "bits": 12792,
        "digits": 2452,
        "text": 1963,
        "bytes": 1224,
    },
    (125, False): {
        "layers": 26,
        "codewords": 1144,
        "cw_bits": 12,
        "bits": 13728,
        "digits": 2632,
        "text": 2107,
        "bytes": 1314,
    },
    (131, False): {
        "layers": 27,
        "codewords": 1224,
        "cw_bits": 12,
        "bits": 14688,
        "digits": 2818,
        "text": 2256,
        "bytes": 1407,
    },
    (135, False): {
        "layers": 28,
        "codewords": 1306,
        "cw_bits": 12,
        "bits": 15672,
        "digits": 3007,
        "text": 2407,
        "bytes": 1501,
    },
    (139, False): {
        "layers": 29,
        "codewords": 1392,
        "cw_bits": 12,
        "bits": 16704,
        "digits": 3205,
        "text": 2565,
        "bytes": 1600,
    },
    (143, False): {
        "layers": 30,
        "codewords": 1480,
        "cw_bits": 12,
        "bits": 17760,
        "digits": 3409,
        "text": 2728,
        "bytes": 1702,
    },
    (147, False): {
        "layers": 31,
        "codewords": 1570,
        "cw_bits": 12,
        "bits": 18840,
        "digits": 3616,
        "text": 2894,
        "bytes": 1806,
    },
    (151, False): {
        "layers": 32,
        "codewords": 1664,
        "cw_bits": 12,
        "bits": 19968,
        "digits": 3832,
        "text": 3067,
        "bytes": 1914,
    },
}

polynomials = {
    4: 19,
    6: 67,
    8: 301,
    10: 1033,
    12: 4201,
}

code_chars = {
    "upper": [
        "P/S",
        " ",
        "A",
        "B",
        "C",
        "D",
        "E",
        "F",
        "G",
        "H",
        "I",
        "J",
        "K",
        "L",
        "M",
        "N",
        "O",
        "P",
        "Q",
        "R",
        "S",
        "T",
        "U",
        "V",
        "W",
        "X",
        "Y",
        "Z",
        "L/L",
        "M/L",
        "D/L",
        "B/S",
    ],
    "lower": [
        "P/S",
        " ",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g",
        "h",
        "i",
        "j",
        "k",
        "l",
        "m",
        "n",
        "o",
        "p",
        "q",
        "r",
        "s",
        "t",
        "u",
        "v",
        "w",
        "x",
        "y",
        "z",
        "U/S",
        "M/L",
        "D/L",
        "B/S",
    ],
    "mixed": [
        "P/S",
        " ",
        "\x01",
        "\x02",
        "\x03",
        "\x04",
        "\x05",
        "\x06",
        "\x07",
        "\x08",
        "\t",
        "\n",
        "\x0b",
        "\x0c",
        "\r",
        "\x1b",
        "\x1c",
        "\x1d",
        "\x1e",
        "\x1f",
        "@",
        "\\",
        "^",
        "_",
        "`",
        "|",
        "~",
        "\x7f",
        "L/L",
        "U/L",
        "P/L",
        "B/S",
    ],
    "punct": [
        "FLG(n)",
        "\r",
        "\r\n",
        ". ",
        ", ",
        ": ",
        "!",
        '"',
        "#",
        "$",
        "%",
        "&",
        "'",
        "(",
        ")",
        "*",
        "+",
        ",",
        "-",
        ".",
        "/",
        ":",
        ";",
        "<",
        "=",
        ">",
        "?",
        "[",
        "]",
        "{",
        "}",
        "U/L",
    ],
    "digit": [
        "P/S",
        " ",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        ",",
        ".",
        "U/L",
        "U/S",
    ],
}

upper_chars = code_chars["upper"][1:-4]
lower_chars = code_chars["lower"][1:-4]
mixed_chars = code_chars["mixed"][1:-4]
punct_chars = code_chars["punct"][1:-1]
digit_chars = code_chars["digit"][1:-2]
punct_2_chars = [pc for pc in punct_chars if len(pc) == 2]

E = 99999  # some big number

latch_len = {
    "upper": {
        "upper": 0,
        "lower": 5,
        "mixed": 5,
        "punct": 10,
        "digit": 5,
        "binary": 10,
    },
    "lower": {
        "upper": 10,
        "lower": 0,
        "mixed": 5,
        "punct": 10,
        "digit": 5,
        "binary": 10,
    },
    "mixed": {
        "upper": 5,
        "lower": 5,
        "mixed": 0,
        "punct": 5,
        "digit": 10,
        "binary": 10,
    },
    "punct": {
        "upper": 5,
        "lower": 10,
        "mixed": 10,
        "punct": 0,
        "digit": 10,
        "binary": 15,
    },
    "digit": {
        "upper": 4,
        "lower": 9,
        "mixed": 9,
        "punct": 14,
        "digit": 0,
        "binary": 14,
    },
    "binary": {"upper": 0, "lower": 0, "mixed": 0, "punct": 0, "digit": 0, "binary": 0},
}

shift_len = {
    "upper": {"upper": E, "lower": E, "mixed": E, "punct": 5, "digit": E, "binary": E},
    "lower": {"upper": 5, "lower": E, "mixed": E, "punct": 5, "digit": E, "binary": E},
    "mixed": {"upper": E, "lower": E, "mixed": E, "punct": 5, "digit": E, "binary": E},
    "punct": {"upper": E, "lower": E, "mixed": E, "punct": E, "digit": E, "binary": E},
    "digit": {"upper": 4, "lower": E, "mixed": E, "punct": 4, "digit": E, "binary": E},
    "binary": {"upper": E, "lower": E, "mixed": E, "punct": E, "digit": E, "binary": E},
}

char_size = {
    "upper": 5,
    "lower": 5,
    "mixed": 5,
    "punct": 5,
    "digit": 4,
    "binary": 8,
}

modes = [
    "upper",
    "lower",
    "mixed",
    "punct",
    "digit",
    "binary",
]

abbr_modes = {
    "U": "upper",
    "L": "lower",
    "M": "mixed",
    "P": "punct",
    "D": "digit",
    "B": "binary",
}
